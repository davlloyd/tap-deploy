apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    vpc: dbsn_dataservices
    provider: aws
  name: xbucket.s3.aws.apa.org
spec:
  compositeTypeRef:
    apiVersion: s3.aws.apa.org/v1alpha1
    kind: XBucket
  publishConnectionDetailsWithStoreConfigRef:
    name: default
  resources:
  - base:
      name: s3-bucket
      apiVersion: s3.aws.upbound.io/v1beta1
      kind: Bucket
      metadata:
        labels:
          xbucket.s3.aws.apa.org/bucketId: id
      spec:
        providerConfigRef:
          name: default
        forProvider:
          region: ap-southeast-2
          tags:
            owner: apa
            service: unset     
        writeConnectionSecretToRef:
          namespace: crossplane-system
    patches:
    - fromFieldPath: metadata.uid
      toFieldPath: metadata.labels.xbucket.s3.aws.apa.org/bucketId
      transforms:
      - string:
          fmt: '%s-id'
          type: Format
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - string:
          fmt: '%s-s3'
          type: Format
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: status.atProvider.arn
      toFieldPath: status.bucketArn
      type: ToCompositeFieldPath
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
      transforms:
      - type: map
        map:
          sydney: ap-southeast-2
          singapore: ap-southeast-1
  - base:
      name: s3-accesspoint
      apiVersion: s3control.aws.upbound.io/v1beta1
      kind: AccessPoint
      metadata:
        labels:
          xbucket.s3.aws.apa.org/bucketId: id
      spec:
        providerConfigRef:
          name: default
        forProvider:
          region: ap-southeast-2
          bucketSelector:
            matchControllerRef: true
        writeConnectionSecretToRef:
          namespace: crossplane-system
    patches:
    - fromFieldPath: metadata.uid
      toFieldPath: spec.writeConnectionSecretToRef.name
      transforms:
      - string:
          fmt: '%s-s3ap'
          type: Format
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.uid
      toFieldPath: metadata.labels.xbucket.s3.aws.apa.org/bucketId
    - fromFieldPath: metadata.uid
      toFieldPath: spec.forProvider.name
      transforms:
      - string:
          fmt: '%s-ap'
          type: Format
        type: string
  - base:
      name: s3-bucketaccess
      apiVersion: s3.aws.upbound.io/v1beta1
      kind: BucketPublicAccessBlock
      spec:
        providerConfigRef:
          name: default
        forProvider:
          region: ap-southeast-2
          blockPublicAcls: false
          blockPublicPolicy: false
          bucketSelector:
            matchControllerRef: true
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
      transforms:
      - type: map
        map:
          sydney: ap-southeast-2
          singapore: ap-southeast-1
  - base:
      name: s3-bucketpolicy
      apiVersion: s3.aws.upbound.io/v1beta1
      kind: BucketPolicy
      spec:
        providerConfigRef:
          name: default
        forProvider:
          region: ap-southeast-2
          policy: ''
          bucketSelector:
            matchControllerRef: true
    patches:
    - fromFieldPath: spec.region
      toFieldPath: spec.forProvider.region
      transforms:
      - type: map
        map:
          sydney: ap-southeast-2
          singapore: ap-southeast-1
    - fromFieldPath: status.bucketArn
      toFieldPath: spec.forProvider.policy
      transforms:
        - type: string
          string:
            fmt: >
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "AllowGetObject",
                    "Principal": {
                      "AWS": "*"
                    },
                    "Effect": "Allow",
                    "Action": [
                      "s3:*"
                    ],
                    "Resource": [
                      "%s/*"
                    ],
                    "Condition": {
                      "StringEquals": {
                        "aws:PrincipalOrgID": [
                          "o-08i2i7oky6"
                        ]
                      }
                    }
                  }
                ]
              }
