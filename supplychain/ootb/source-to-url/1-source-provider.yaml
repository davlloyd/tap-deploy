apiVersion: carto.run/v1alpha1
kind: ClusterSourceTemplate
metadata:
  annotations:
    kapp.k14s.io/identity: v1;/carto.run/ClusterSourceTemplate/source-template;carto.run/v1alpha1
    kapp.k14s.io/original: '{"apiVersion":"carto.run/v1alpha1","kind":"ClusterSourceTemplate","metadata":{"labels":{"kapp.k14s.io/app":"1652683466758541831","kapp.k14s.io/association":"v1.3f8a98253cdf47d64c37f27a382e5698"},"name":"source-template"},"spec":{"params":[{"default":"default","name":"serviceAccount"},{"default":"go-git","name":"gitImplementation"}],"revisionPath":".status.artifact.revision","urlPath":".status.artifact.url","ytt":"#@
      load(\"@ytt:data\", \"data\")\n\n#@ def merge_labels(fixed_values):\n#@   labels
      = {}\n#@   if hasattr(data.values.workload.metadata, \"labels\"):\n#@     labels.update(data.values.workload.metadata.labels)\n#@   end\n#@   labels.update(fixed_values)\n#@   return
      labels\n#@ end\n\n#@ def param(key):\n#@   if not key in data.values.params:\n#@     return
      None\n#@   end\n#@   return data.values.params[key]\n#@ end\n\n---\n#@ if hasattr(data.values.workload.spec.source,
      \"git\"):\napiVersion: source.toolkit.fluxcd.io/v1beta1\nkind: GitRepository\nmetadata:\n  name:
      #@ data.values.workload.metadata.name\n  labels: #@ merge_labels({ \"app.kubernetes.io/component\":
      \"source\" })\nspec:\n  interval: 1m0s\n  url: #@ data.values.workload.spec.source.git.url\n  ref:
      #@ data.values.workload.spec.source.git.ref\n  gitImplementation: #@ data.values.params.gitImplementation\n  ignore:
      |\n    !.git\n  #@ if/end param(\"gitops_ssh_secret\"):\n  secretRef:\n    name:
      #@ param(\"gitops_ssh_secret\")\n#@ end\n\n#@ if hasattr(data.values.workload.spec.source,
      \"image\"):\napiVersion: source.apps.tanzu.vmware.com/v1alpha1\nkind: ImageRepository\nmetadata:\n  name:
      #@ data.values.workload.metadata.name\n  labels: #@ merge_labels({ \"app.kubernetes.io/component\":
      \"source\" })\nspec:\n  serviceAccount: #@ data.values.params.serviceAccount\n  interval:
      1m0s\n  image: #@ data.values.workload.spec.source.image\n#@ end\n"}}'
    kapp.k14s.io/original-diff-md5: c6e94dc94aed3401b5d0f26ed6c0bff3
  creationTimestamp: "2022-05-16T06:44:31Z"
  generation: 1
  labels:
    kapp.k14s.io/app: "1652683466758541831"
    kapp.k14s.io/association: v1.3f8a98253cdf47d64c37f27a382e5698
  name: source-template
  resourceVersion: "41346"
  uid: 0c215d5e-24b9-448b-9f0c-2aacde693a06
spec:
  params:
  - default: default
    name: serviceAccount
  - default: go-git
    name: gitImplementation
  revisionPath: .status.artifact.revision
  urlPath: .status.artifact.url
  ytt: |
    #@ load("@ytt:data", "data")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    #@ def param(key):
    #@   if not key in data.values.params:
    #@     return None
    #@   end
    #@   return data.values.params[key]
    #@ end

    ---
    #@ if hasattr(data.values.workload.spec.source, "git"):
    apiVersion: source.toolkit.fluxcd.io/v1beta1
    kind: GitRepository
    metadata:
      name: #@ data.values.workload.metadata.name
      labels: #@ merge_labels({ "app.kubernetes.io/component": "source" })
    spec:
      interval: 1m0s
      url: #@ data.values.workload.spec.source.git.url
      ref: #@ data.values.workload.spec.source.git.ref
      gitImplementation: #@ data.values.params.gitImplementation
      ignore: |
        !.git
      #@ if/end param("gitops_ssh_secret"):
      secretRef:
        name: #@ param("gitops_ssh_secret")
    #@ end

    #@ if hasattr(data.values.workload.spec.source, "image"):
    apiVersion: source.apps.tanzu.vmware.com/v1alpha1
    kind: ImageRepository
    metadata:
      name: #@ data.values.workload.metadata.name
      labels: #@ merge_labels({ "app.kubernetes.io/component": "source" })
    spec:
      serviceAccount: #@ data.values.params.serviceAccount
      interval: 1m0s
      image: #@ data.values.workload.spec.source.image
    #@ end
